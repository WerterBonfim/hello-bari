version: "3.7"

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      resources:
        limits:
          memory: 2G
  
  
  
  kafka:
    container_name: kafka
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 4G

  mongodb:
    container_name: mongo
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - "mongo_data:/data/db"
    deploy:
      resources:
        limits:
          memory: 2G
#
#  werter-producer:
#    container_name: werter-producer
#    image: werter-producer
#    stdin_open: true
#    tty: true
#    build:
#      context: src/
#      dockerfile: HelloService/Hello.Cmd/Werter.HelloCmd.Api/Dockerfile
#    ports:
#      - "5060:5060"
#      - "7032:7032"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_URLS=http://*:7032
#      - Host=werter-producer
#      - KAFKA_TOPIC=BariHelloEvents
#    depends_on:
#      - zookeeper
#      - kafka
#      - mongodb
#    deploy:
#      resources:
#        limits:
#          memory: 100MB
#
#
#
#  werter-consumer:
#    container_name: werter-consumer
#    image: werter-consumer
#    stdin_open: true
#    tty: true
#    build:
#      context: src/
#      dockerfile: HelloService/Hello.Query/Werter.HelloQuery.Api/Werter.HelloQuery.Api/Dockerfile
#    ports:
#      - "5064:5064"
#      - "7034:7034"
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ASPNETCORE_URLS=http://*:7034
#      - Host=werter-consumer
#      - KAFKA_TOPIC=BariHelloEvents
#    depends_on:
#      - zookeeper
#      - kafka
#    deploy:
#      resources:
#        limits:
#          memory: 100MB
  
  
  
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"
    depends_on:
      - werter-producer
      - werter-consumer
    deploy:
      resources:
        limits:
          memory: 100MB


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_data:
    driver: local

networks:
  default:
    external:
      name: mydockernetwork